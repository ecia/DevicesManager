//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DevicesManager.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getCPUPerformence", ReplyAction="http://tempuri.org/IService/getCPUPerformenceResponse")]
        string getCPUPerformence(string cpuPreformence);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getCPUPerformence", ReplyAction="http://tempuri.org/IService/getCPUPerformenceResponse")]
        System.Threading.Tasks.Task<string> getCPUPerformenceAsync(string cpuPreformence);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getRAMPerformence", ReplyAction="http://tempuri.org/IService/getRAMPerformenceResponse")]
        string getRAMPerformence(string ramPerformence);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getRAMPerformence", ReplyAction="http://tempuri.org/IService/getRAMPerformenceResponse")]
        System.Threading.Tasks.Task<string> getRAMPerformenceAsync(string ramPerformence);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Upload", ReplyAction="http://tempuri.org/IService/UploadResponse")]
        string Upload(System.IO.Stream input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Upload", ReplyAction="http://tempuri.org/IService/UploadResponse")]
        System.Threading.Tasks.Task<string> UploadAsync(System.IO.Stream input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Download", ReplyAction="http://tempuri.org/IService/DownloadResponse")]
        System.IO.Stream Download(string file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Download", ReplyAction="http://tempuri.org/IService/DownloadResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> DownloadAsync(string file);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : DevicesManager.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<DevicesManager.ServiceReference.IService>, DevicesManager.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string getCPUPerformence(string cpuPreformence) {
            return base.Channel.getCPUPerformence(cpuPreformence);
        }
        
        public System.Threading.Tasks.Task<string> getCPUPerformenceAsync(string cpuPreformence) {
            return base.Channel.getCPUPerformenceAsync(cpuPreformence);
        }
        
        public string getRAMPerformence(string ramPerformence) {
            return base.Channel.getRAMPerformence(ramPerformence);
        }
        
        public System.Threading.Tasks.Task<string> getRAMPerformenceAsync(string ramPerformence) {
            return base.Channel.getRAMPerformenceAsync(ramPerformence);
        }
        
        public string Upload(System.IO.Stream input) {
            return base.Channel.Upload(input);
        }
        
        public System.Threading.Tasks.Task<string> UploadAsync(System.IO.Stream input) {
            return base.Channel.UploadAsync(input);
        }
        
        public System.IO.Stream Download(string file) {
            return base.Channel.Download(file);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> DownloadAsync(string file) {
            return base.Channel.DownloadAsync(file);
        }
    }
}
